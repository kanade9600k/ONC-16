# Hello Worldを表示するプログラム
# r1: UARTステータスアドレス, r2: UARTデータアドレス, r3: ステータスデータ r4: 送信データ
LDHI r1, 0x08 # r1に0x0800をロード 0x0000
MOV r2, r1 # r2に0x0800を転送
ADDIU r2, 1 # r2に0x0001を加算
LD r3, r1 # r3にr1のアドレス内の値をロード
ANDI r3, 1 # r3と1のビット積
CMP r3, 0 # r3の最下位ビットが0かを判定
BEQI -4 # 0ならステータスデータを再度ロード
LDIU r4 0x48 # 1ならHを送信 0x0007
ST r4, r2 # 送信データをUARTデータアドレスにストア
LD r3, r1 # r3にr1のアドレス内の値をロード 0x0009
ANDI r3, 1 # r3と1のビット積
CMP r3, 0 # r3の最下位ビットが0かを判定
BEQI -4 # 0ならステータスデータを再度ロード 0x000C
LDIU r4 0x65 # 1ならeを送信 0x000D
ST r4, r2 # 送信データをUARTデータアドレスにストア
LD r3, r1 # r3にr1のアドレス内の値をロード
ANDI r3, 1 # r3と1のビット積 0x0010
CMP r3, 0 # r3の最下位ビットが0かを判定
BEQI -4 # 0ならステータスデータを再度ロード
LDIU r4 0x6C # 1ならlを送信
ST r4, r2 # 送信データをUARTデータアドレスにストア
LD r3, r1 # r3にr1のアドレス内の値をロード
ANDI r3, 1 # r3と1のビット積
CMP r3, 0 # r3の最下位ビットが0かを判定
BEQI -4 # 0ならステータスデータを再度ロード
LDIU r4 0x6C # 1ならlを送信
ST r4, r2 # 送信データをUARTデータアドレスにストア
LD r3, r1 # r3にr1のアドレス内の値をロード
ANDI r3, 1 # r3と1のビット積
CMP r3, 0 # r3の最下位ビットが0かを判定
BEQI -4 # 0ならステータスデータを再度ロード
LDIU r4 0x6F # 1ならoを送信
ST r4, r2 # 送信データをUARTデータアドレスにストア 0x0020
LD r3, r1 # r3にr1のアドレス内の値をロード
ANDI r3, 1 # r3と1のビット積
CMP r3, 0 # r3の最下位ビットが0かを判定
BEQI -4 # 0ならステータスデータを再度ロード
LDIU r4 0x20 # 1なら␣を送信
ST r4, r2 # 送信データをUARTデータアドレスにストア
LD r3, r1 # r3にr1のアドレス内の値をロード
ANDI r3, 1 # r3と1のビット積
CMP r3, 0 # r3の最下位ビットが0かを判定
BEQI -4 # 0ならステータスデータを再度ロード
LDIU r4 0x00 # 1ならNULL文字を送信
ST r4, r2 # 送信データをUARTデータアドレスにストア
BALI -1 # 終了
